name: CI

on: [push, pull_request]

jobs:
  test:
    name: test ${{ matrix.os }} jdk${{ matrix.java }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        java: [ 8, 11, 16, 17 ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
          java-package: jdk
          cache: 'maven'
      - name: Test
        run: mvn test

  release:
    name: Release
    needs: test
    if: github.ref == 'refs/heads/deploy' # only perform on latest master
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Apache Maven Central
        uses: actions/setup-java@v2
        with: # running setup-java again overwrites the settings.xml
          distribution: 'temurin'
          java-version: '8'
          java-package: jdk
          server-id: ossrh # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: MAVEN_CENTRAL_USERNAME # env variable for username in deploy (1)
          server-password: MAVEN_CENTRAL_PASSWORD # env variable for token in deploy (2)
          gpg-private-key: ${{ secrets.GPG_KEY }} # Value of the GPG private key to import
          gpg-passphrase: MAVEN_CENTRAL_GPG_PASSPHRASE # env variable for GPG private key passphrase (3)
      - name: Publish to Apache Maven Central
        run: mvn deploy -P release -DskipTests
        env:
          MAVEN_CENTRAL_USERNAME: ${{ secrets.SONATYPE_USERNAME }} # must be the same env variable name as (1)
          MAVEN_CENTRAL_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }} # must be the same env variable name as (2)
          MAVEN_CENTRAL_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }} # must be the same env variable name as (3)